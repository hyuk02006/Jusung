응용 SW 기초기술 활용
레지스터 -처리중인 데이터나 처리결과를 임시보관하는 기능 ,CPU 내부의 초고속 기억장치

레지스터 종류 (PMMIA)
PC - 다음에 인출할 명렁어의 주소를 가지고 있는 레지스터
MAR - 메모리 주소를 일시적으로 저장하는 레지스터 
MBR - 기억장치에 쓰일 데이터를 일시적으로 저장하는 버퍼 레지스터
IR - 가장 최근에 인출된 명령어 코드가 저장
AC - 데이터의 연산 결과를 일시적으로 저장

인터럽트 - 프로그램 실행중 CPU의 현재 처리 순서를 중단시키고 다른 동작을 수행

인터럽트 처리 루틴 (IRQ -> IPR -> ISR)
인터럽트인식 -> 현재상태보전 -> 요청 인터럽트 서비스로 분기 및 서비스 -> 사용자 상태 복구 및 재개

인터럽트 구현방식
-소프트웨어 방식 (Polling 방식)
-하드웨어 방식 (직렬 -> 데이지체인 ,병렬 -> 멀티플 인터럽트)

명령어 수행과정
명령어 인출 -> 해독 -> 실행 ->저장

Locallity(구역성) - 프로그램의 어느한 특정부분만 집중적으로 참조하는 현상
(메모리 계층 구조가 데이터베이스의 LRU 알고리즘은 구역성 특징을 활용하여 성능을 향상)
종류 : 시간, 공간 ,순차 구역성

DMA - 입출력 장치 제어기가 CPU에 의한 프로그래밍의 실행없이 자료의 이동을 하는 방식

UNIX 명령어
chmod = 파일이나 디렉토리의 접근권한을 변경
du = 현재 디렉토리 아래의 디스크 사용현황을 출력
fork = 현재 프로세스에 대해 자식 프로세스를 생성하는 함수
cat = 파일의 내용을 보는 명령어
ls = 디렉토리와 파일 목록을 출력하는 명령어
cd = 디렉토리로 이동하는 명령어

쉘 - 커널과 사용자 간의 인터페이스를 담당

파이프라인 기법 - 단위시간내 하나 이상의 명령어를 중첩수행하여 펄포먼스를 향상시키는 멀티프로세스 환경에서의 명렁어 처리 메커니즘

플린분류법 - 프로그램 수행중 처리기기가 동시에 수행하는 명령과 데이터의 수에 따라 구분

운영체제 유형
-멀티프로그래밍, 시분할시스템, 분산처리시스템,다중처리시스템,실시간처리시스템

페이징기법 - 가상기억장치 내의 프로그램과 데이터를 고정되게 분할한 용량을 주기억장치에 사상시키는 기법

세그멘테이션기법 - 가상기억장치내의 프로그램과 데이터를 각 세그먼트가 주 기억장치에 적재 될때마다 필요한 서로다른 크기의 세크먼트로 분할

가상메모리 - 주 기억장치안의 프로그램 양이 많아질때 사용하지 않는 프로그램을 보조 기억장치 안의 특별한 영역으로 옮겨서, 그 보조 기억장치
	     부분을 주 기억장치 처럼 사용할수 있는 영력

스레싱 방지기법 (프 워 페)
프리페이징 - 과도한 페이지 부재를 줄이기 위해 모든 페이즈를 한번에 페이지 프레임에 적재하는 방법
워킹셋 - 하나의 프로세스에 자주 참조되는 페이지를 모아 놓은 기법
페이지 프레임조정 - 현재 페이지 부재와 바로 전 페이지 부재 사이의 시간을 관찰하여 그 시간이 지금까지 최소시간 보다 크면 그 사이에 호출되지 않았던
		  페이지를 모두 제거

메모리 인터리빙 = 기억장치 모듈에 순차적인 접근을 함으로써 접근시간을 최소화 하여 성능을 향상
<상위 , 하위 , 혼합>

메모리의 페이지 교체 알고리즘
FIFO (선입선출) 메모리에 올라온지 가장 오래된 페이지를 교체
OPR 앞으로 가장 오랫동안 사용되지 않을 페이지를 교체
LRU 가장 오랫동안 사용되지 않을 페이지를 교체
LFU 사용빈도가 가장 적은 페이지를 교체
NUR 최근에 사용되지 않은 페이지를 교체
RPR 무작위 페이즈 교체

단편화 - 주 기억장치 상에서 프로그램에 의해 사요되지 못하고 낭비되는 부분적인 기억공간
(전체 기억공간의 방비 = 내부 단편화 + 외부 단편화)

교착상태 - 다중 프로세스 환경하에 서로 다른 프로세스가 각자 자시이 소유한 자원을 포기하지않고, 상대 프로세스의 자원을 무한 대기하고 있는 상태

교착상태 발생조건 (상 점 비 환)
상호배제
점유와 대기
비선점
환형대기

교착상태 해결방안 (예 회 발 복)
예방
회피 (은행가 알고리즘)
발견
회복

임계영역 - 여러개의 프로세스가 공유하는 데이터 및 자원에 대해 어느 한 시점에는 하나의 프로세스만 사용하도록 지정된 공유영역

상호배제 = 경쟁조건을 방지하기 위해 특정 프로세스가 공유자원을 사용하고 있을 경우 다른 모든 프로세스가 해당 공유 자원을 사용하지 못하도록 제어하는 기법

상호배제 해결방안 ( 데 피 램 세)
데커 알고리즘 - 두 개의 프로세스를 위한 상호배제에 대한 최초의 소프트웨어 기법
피터슨 알고리즘 - Boolean Flag , int run
램포드 알고리즘 - 분산처리 환경
세마포어 - 운영체제 또는 프로그램 작성내에서

i-node - UNIX 파일 시스템에서 각 파일에 대한 정보를 기억하는 약 120byte 고정된 크기의 자료구조

디스크 스케줄링 - 운영체제가 디스크를 읽거나 쓰려는 요청을 받았을때, 우선순위를 정해 관리하는 기법
FCFS - 요청 큐에 들어온 순서대로 처리 / 비효울적
SSTF  - 현재 헤드 위치에서 가장 가까운 트랙의 요청 처리 / 응답시간 편차 큼
SCAN - 엘리베이터 알고리즘

프로세스 - 프로그램은 파일형태로 저장하였다가 실행시키면 동작을 하는데 이때 실행중인 프로그램

스레드 - 프로세스나 태스크보다 더 작은 단위, 실행환경을 공유시켜 기억장소의 낭비가 줄어듬/ 다중프로그래밍 시스템에서 CPU를 받아서 수행되는 프로그램 단위

다단계피드백 큐 = FIFO와 RR 스케줄링 방식을 혼합

HRN의 우선순위 - 대기시간 + 서비스시간 / 서비스 시간

분산처리시스템 - 프로세서 모델에 따라 서버/클라이언트 모델. 프로세서 풀 모텔, 혼합모델로 분류

NoSQL
데이;터 모델링을 위한 고정된 데이터 스키마 없이 jey 값을 이용해 다양한 형태의 저장과 접근이 가능한 데이터베이스

NoSQL 저장구조
key/ value Store
Ordered Key /ValueStore
Document Key

데이터베이스 스키마 구조
내부스키마- 물리적인 기억장소와 가장 가까운 단계
외부스키마 - 사용자와 가장 가까운 단계
개념스키마 - 내부와 오부사이에 위차하는 단계

데이터독립성- 데이터의 저장구조와 접근 기법으로부터 으용을 분리시키는 개념으로, 데이터베이스 내의 데이터와 응용프로그램이 서로 영향을 받지 않는다		
	      하위단계에서 데이터의 구조가 변경되어도 상위단계에 영향을 미치지 않는다

논리적독립성 = 데이터베이스의 논리적 구조를 변경시키더라도 기존 응용프로그램에 영향을 주지 않는 독립성

물리적독립성 - 응용프로그램과 논리적 구조에 영향을 주지않고, 데이터베이스의 물리적 구조를 변경가능한 독립성

튜플 - 릴레이션의 행을 구성하는 속성값들의 집합
도메인 - 하나의 속성을 취할 수 있는 같은 타입의 원자값들의 집합
카디널리티 - 튜플의 수

무결성 - 데이터베이스에 저장된 데이터값과 그것이 표현하는 현실세계의 실제값이 일치하는 정확성

참조무결성 - 외래키속성은 반드시 참조되어야한다 / 외래키가 참조하는 개체의 기본키는 기본키이거나 NULL 이어야한다.

도메인무결성 = 특정 속성값이 미리 정의된 규칙내에서 데이터로 존재해야한다

관계대수 - 절차적 언어
관계해석 - 비절차적언어

트랜잭션 - 데이터베이스의 상태를 변화시키기 위해서 수행하는 최소작업의 단위

원자성 : 분해할수 없는 최소단위
일관성 트랜잭션이 실행 성공 후 항상 모순없이 일관성 있는 DB상태로 보존 / 참조 무결성 기법
독립성 - 현재 수행중인 트랜잭션이 완료될때까지 트랜잭션이 생성한 중간 연산 결과에 다른 트랜잭션들이 접근할수 없음을 의미
영속성 - 서공이 완료된 트랜잭션의 결과는 영구적으로 데이터베이스에 저장됨

데이터베이스 장애유형 (트 시 디 사)
트랜잭션장애
시스템장애
디스크장애
사용자장애

REDO - 트랜잭션이 완료된 데이터를 회복하는 사용
UNDO - 트랜잭션이 수행중인 데이터를 회복하는데 사용

데이터베이스 병행제어 - 다중 사용자환경에서 여러 트랜잭션을 동시에 실행될수 있도록 트랜잭션에 대한 직렬성을 보장하는 제어기법
















